Collection the pseudo static rules from most useful php frame work website

1.Laravel pseudo static rules

1.1 Recommended Nginx Configuration

```
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
```


1.2 Recommended Apache Configuration

```
    Options +FollowSymLinks
    RewriteEngine On
    
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]
```


The docs from :

[Laravel.com]: https://laravel.com/docs/5.5	"documention"



2.Yii2 pseudo static rules

2.1 Recommended Apache Configuration

Use the following configuration in Apache's httpd.conf file or within a virtual host configuration. Note that you should replace path/to/basic/web with the actual path for basic/web.

```
    # Set document root to be "basic/web"
    DocumentRoot "path/to/basic/web"
    
    <Directory "path/to/basic/web">
        # use mod_rewrite for pretty URL support
        RewriteEngine on
        # If a directory or a file exists, use the request directly
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        # Otherwise forward the request to index.php
        RewriteRule . index.php
    
        # if $showScriptName is false in UrlManager, do not allow accessing URLs with script name
        RewriteRule ^index.php/ - [L,R=404]
    
        # ...other settings...
    </Directory>
```    



2.2 Recommended Nginx Configuration

To use Nginx, you should install PHP as an FPM SAPI. You may use the following Nginx configuration, replacing path/to/basic/web with the actual path for basic/web and mysite.test with the actual hostname to serve.

```
    server {
        charset utf-8;
        client_max_body_size 128M;
    
        listen 80; ## listen for ipv4
        #listen [::]:80 default_server ipv6only=on; ## listen for ipv6
    
        server_name mysite.test;
        root        /path/to/basic/web;
        index       index.php;
    
        access_log  /path/to/basic/log/access.log;
        error_log   /path/to/basic/log/error.log;
    
        location / {
            # Redirect everything that isn't a real file to index.php
            try_files $uri $uri/ /index.php$is_args$args;
        }
    
        # uncomment to avoid processing of calls to non-existing static files by Yii
        #location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
        #    try_files $uri =404;
        #}
        #error_page 404 /404.html;
    
        # deny accessing php files for the /assets directory
        location ~ ^/assets/.*\.php$ {
            deny all;
        }
    
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass 127.0.0.1:9000;
            #fastcgi_pass unix:/var/run/php5-fpm.sock;
            try_files $uri =404;
        }
    
        location ~* /\. {
            deny all;
        }
    }
    
```

When using this configuration, you should also set cgi.fix_pathinfo=0 in the php.ini file in order to avoid many unnecessary system stat() calls.

Also note that when running an HTTPS server, you need to add fastcgi_param HTTPS on; so that Yii can properly detect if a connection is secure.



The docs from:

[yiiframework]: http://www.yiiframework.com/doc-2.0/guide-start-installation.html	"documention"



3.ThinkPHP5.0 pseudo static rules

3.1 Recommended Apache Configuration

3.1 .1 httpd.conf配置文件中加载了mod_rewrite.so模块

3.1.2 AllowOverride None 将None改为 All

3.1.3 在应用入口文件同级目录添加.htaccess文件，内容如下：

```
    <IfModule mod_rewrite.c>
    Options +FollowSymlinks -Multiviews
    RewriteEngine on
    
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]
    </IfModule>
```


3.2 Nginx 路由规则配置

3.2.1 在Nginx低版本中，是不支持PATHINFO的，但是可以通过在Nginx.conf中配置转发规则实现：

```
    location / { // …..省略部分代码
       if (!-e $request_filename) {
       rewrite  ^(.*)$  /index.php?s=/$1  last;
       break;
        }
     }
```

3.2.2 如果你的应用安装在二级目录，Nginx的伪静态方法设置如下，其中youdomain是所在的目录名称。

```
    location /youdomain/ {
        if (!-e $request_filename){
            rewrite  ^/youdomain/(.*)$  /youdomain/index.php?s=/$1  last;
        }
    }
```


Version of ThinkPHP3.2.3 you can see this :

[ThinkPHP3.2.3 URL重写]: https://www.kancloud.cn/manual/thinkphp/1866	"Documention"



The docs from:

[ThinkPHP5]: https://www.kancloud.cn/manual/thinkphp5/177576	"Documention"


4.CodeIgniter framework's rule

4.1 Recommended Nginx Configuration

```
Requirements
php-fpm
Recipe
server {
        server_name domain.tld;

        root /var/www/codeignitor;
        index index.html index.php;

        # set expiration of assets to MAX for caching
        location ~* \.(ico|css|js|gif|jpe?g|png)(\?[0-9]+)?$ {
                expires max;
                log_not_found off;
        }

        location / {
                # Check if a file or directory index file exists, else route it to index.php.
                try_files $uri $uri/ /index.php;
        }

        location ~* \.php$ {
                fastcgi_pass 127.0.0.1:9000;
                include fastcgi.conf;
        }
}

```

After this, make sure that your codeIgniter config.php contains the following information:

```
$config['base_url'] = "http://domain.tld/";
$config['index_page']       = "";
$config['uri_protocol']     = "REQUEST_URI";
```

An alternative configuration, production ready. You don’t need to modify “config.php”, except for removing “index.php”

```
$config['base_url'] = "";
$config['index_page']       = "";
$config['uri_protocol']     = "AUTO";
server {
        listen       80;
        server_name  localhost;
        root   /var/www/html/ci;
        autoindex on;
        index index.php;

        location / {

            try_files $uri $uri/ /index.php;

            location = /index.php {

                fastcgi_pass   127.0.0.1:6969;
                fastcgi_param  SCRIPT_FILENAME /var/www/html/ci$fastcgi_script_name;
                include        fastcgi_params;
            }
        }

        location ~ \.php$ {
            return 444;
        }
}
```

The docs from:

[Codeignitor]: https://www.nginx.com/resources/wiki/start/topics/recipes/codeigniter/	"Documention"
